<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fixed.asset.mapper.StockHistoryMapper">
  <resultMap id="BaseResultMap" type="com.fixed.asset.model.StockHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="op_type" jdbcType="INTEGER" property="opType" />
    <result column="op_user_id" jdbcType="INTEGER" property="opUserId" />
    <result column="op_time" jdbcType="TIMESTAMP" property="opTime" />
    <result column="op_status" jdbcType="TINYINT" property="opStatus" />
    <result column="op_asset_code" jdbcType="VARCHAR" property="opAssetCode" />
    <result column="op_project_code" jdbcType="VARCHAR" property="opProjectCode" />
    <result column="op_outstock_code" jdbcType="VARCHAR" property="opOutstockCode" />
    <result column="op_remark" jdbcType="VARCHAR" property="opRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, op_type, op_user_id, op_time, op_status, op_asset_code, op_project_code, op_outstock_code, 
    op_remark
  </sql>
  <select id="selectByExample" parameterType="com.fixed.asset.model.StockHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fixed.asset.model.StockHistoryExample">
    delete from stock_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fixed.asset.model.StockHistory">
    insert into stock_history (id, op_type, op_user_id, 
      op_time, op_status, op_asset_code, 
      op_project_code, op_outstock_code, op_remark
      )
    values (#{id,jdbcType=INTEGER}, #{opType,jdbcType=INTEGER}, #{opUserId,jdbcType=INTEGER}, 
      #{opTime,jdbcType=TIMESTAMP}, #{opStatus,jdbcType=TINYINT}, #{opAssetCode,jdbcType=VARCHAR}, 
      #{opProjectCode,jdbcType=VARCHAR}, #{opOutstockCode,jdbcType=VARCHAR}, #{opRemark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fixed.asset.model.StockHistory">
    insert into stock_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="opType != null">
        op_type,
      </if>
      <if test="opUserId != null">
        op_user_id,
      </if>
      <if test="opTime != null">
        op_time,
      </if>
      <if test="opStatus != null">
        op_status,
      </if>
      <if test="opAssetCode != null">
        op_asset_code,
      </if>
      <if test="opProjectCode != null">
        op_project_code,
      </if>
      <if test="opOutstockCode != null">
        op_outstock_code,
      </if>
      <if test="opRemark != null">
        op_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="opType != null">
        #{opType,jdbcType=INTEGER},
      </if>
      <if test="opUserId != null">
        #{opUserId,jdbcType=INTEGER},
      </if>
      <if test="opTime != null">
        #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="opStatus != null">
        #{opStatus,jdbcType=TINYINT},
      </if>
      <if test="opAssetCode != null">
        #{opAssetCode,jdbcType=VARCHAR},
      </if>
      <if test="opProjectCode != null">
        #{opProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="opOutstockCode != null">
        #{opOutstockCode,jdbcType=VARCHAR},
      </if>
      <if test="opRemark != null">
        #{opRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fixed.asset.model.StockHistoryExample" resultType="java.lang.Long">
    select count(*) from stock_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stock_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.opType != null">
        op_type = #{record.opType,jdbcType=INTEGER},
      </if>
      <if test="record.opUserId != null">
        op_user_id = #{record.opUserId,jdbcType=INTEGER},
      </if>
      <if test="record.opTime != null">
        op_time = #{record.opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.opStatus != null">
        op_status = #{record.opStatus,jdbcType=TINYINT},
      </if>
      <if test="record.opAssetCode != null">
        op_asset_code = #{record.opAssetCode,jdbcType=VARCHAR},
      </if>
      <if test="record.opProjectCode != null">
        op_project_code = #{record.opProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="record.opOutstockCode != null">
        op_outstock_code = #{record.opOutstockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.opRemark != null">
        op_remark = #{record.opRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stock_history
    set id = #{record.id,jdbcType=INTEGER},
      op_type = #{record.opType,jdbcType=INTEGER},
      op_user_id = #{record.opUserId,jdbcType=INTEGER},
      op_time = #{record.opTime,jdbcType=TIMESTAMP},
      op_status = #{record.opStatus,jdbcType=TINYINT},
      op_asset_code = #{record.opAssetCode,jdbcType=VARCHAR},
      op_project_code = #{record.opProjectCode,jdbcType=VARCHAR},
      op_outstock_code = #{record.opOutstockCode,jdbcType=VARCHAR},
      op_remark = #{record.opRemark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fixed.asset.model.StockHistory">
    update stock_history
    <set>
      <if test="opType != null">
        op_type = #{opType,jdbcType=INTEGER},
      </if>
      <if test="opUserId != null">
        op_user_id = #{opUserId,jdbcType=INTEGER},
      </if>
      <if test="opTime != null">
        op_time = #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="opStatus != null">
        op_status = #{opStatus,jdbcType=TINYINT},
      </if>
      <if test="opAssetCode != null">
        op_asset_code = #{opAssetCode,jdbcType=VARCHAR},
      </if>
      <if test="opProjectCode != null">
        op_project_code = #{opProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="opOutstockCode != null">
        op_outstock_code = #{opOutstockCode,jdbcType=VARCHAR},
      </if>
      <if test="opRemark != null">
        op_remark = #{opRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fixed.asset.model.StockHistory">
    update stock_history
    set op_type = #{opType,jdbcType=INTEGER},
      op_user_id = #{opUserId,jdbcType=INTEGER},
      op_time = #{opTime,jdbcType=TIMESTAMP},
      op_status = #{opStatus,jdbcType=TINYINT},
      op_asset_code = #{opAssetCode,jdbcType=VARCHAR},
      op_project_code = #{opProjectCode,jdbcType=VARCHAR},
      op_outstock_code = #{opOutstockCode,jdbcType=VARCHAR},
      op_remark = #{opRemark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>